<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="oss.fosslight.repository.VulnerabilityHistoryMapper">

	<sql id="limitPage">
		LIMIT #{startIndex}, #{pageListSize}
	</sql>
	<!--TODO : Why don't you change camel case to snake case like other files about sidx-->
    <sql id="orderby">
    	<if test="!@oss.fosslight.util.StringUtil@isEmpty(sidx)">
    		ORDER BY
    		<choose>
				<when test="@oss.fosslight.util.StringUtil@equals('REG_DT', sidx)">
					REG_DT
				</when>
				<when test="@oss.fosslight.util.StringUtil@equals('OSS_ID', sidx)">
					OSS_ID
				</when>
				<when test="@oss.fosslight.util.StringUtil@equals('OSS_NAME', sidx)">
					OSS_NAME
				</when>
				<when test="@oss.fosslight.util.StringUtil@equals('OSS_VERSION', sidx)">
					OSS_VERSION
				</when>
				<when test="@oss.fosslight.util.StringUtil@equals('CVE_ID', sidx)">
					CVE_ID
				</when>
				<when test="@oss.fosslight.util.StringUtil@equals('CVSS_SCORE', sidx)">
					CAST(CVSS_SCORE AS DECIMAL(10, 1))
				</when>
				<when test="@oss.fosslight.util.StringUtil@equals('CVE_ID_TO', sidx)">
					CVE_ID_TO
				</when>
				<when test="@oss.fosslight.util.StringUtil@equals('CVSS_SCORE_TO', sidx)">
					CAST(CVSS_SCORE_TO AS DECIMAL(10, 1))
				</when>
			</choose>
			<if test="!@oss.fosslight.util.StringUtil@isEmpty(sord)">
				<choose>
					<when test="@oss.fosslight.util.StringUtil@equals('asc', sord)">
						ASC
					</when>
					<when test="@oss.fosslight.util.StringUtil@equals('desc', sord)">
						DESC
					</when>
				</choose>
			</if>
    	</if>
    </sql>

	<sql id="filters">
		AND
		<foreach collection="filtersMap.rules" item="item" separator="AND">
			<choose>
				<when test='item.field == "ossId"'>
					OSS_ID
				</when>
				<when test='item.field == "ossName"'>
					OSS_NAME
				</when>
				<when test='item.field == "ossVersion"'>
					OSS_VERSION
				</when>
				<when test='item.field == "cveId"'>
					CVE_ID
				</when>
				<when test='item.field == "cvssScore"'>
					CVSS_SCORE
				</when>
				<when test='item.field == "cveIdTo"'>
					CVE_ID_TO
				</when>
				<when test='item.field == "cvssScoreTo"'>
					CVSS_SCORE_TO
				</when>
				<when test='item.field == "regDt"'>
					DATE_FORMAT(REG_DT, '%Y-%m-%d')
				</when>
			</choose>
			<choose>
				<when test='item.op == "eq"'>
					= #{item.data}
				</when>
				<when test='item.op == "ne"'>
					<![CDATA[<>]]> #{item.data}
				</when>
				<when test='item.op == "bw"'>
					LIKE CONCAT(#{item.data}, '%')
				</when>
				<when test='item.op == "bn"'>
					NOT LIKE CONCAT(#{item.data}, '%')
				</when>
				<when test='item.op == "ew"'>
					LIKE CONCAT('%', #{item.data})
				</when>
				<when test='item.op == "en"'>
					NOT LIKE CONCAT('%', #{item.data})
				</when>
				<when test='item.op == "cn"'>
					LIKE CONCAT('%', #{item.data}, '%')
				</when>
				<when test='item.op == "nc"'>
					NOT LIKE CONCAT('%', #{item.data}, '%')
				</when>
				<when test='item.op == "lt"'>
					<![CDATA[<]]> #{item.data}
				</when>
				<when test='item.op == "le"'>
					<![CDATA[<=]]> #{item.data}
				</when>
				<when test='item.op == "gt"'>
					<![CDATA[>]]> #{item.data}
				</when>
				<when test='item.op == "ge"'>
					<![CDATA[>=]]> #{item.data}
				</when>
				<otherwise></otherwise>
			</choose>
		</foreach>
    </sql>
    
    <select id="selectVulnerabilityHistoryTotalCount" parameterType="oss.fosslight.domain.VulnerabilityHistory" resultType="int">
		SELECT
			COUNT(1)
		FROM
			NVD_OSS_HIS
		WHERE 1=1
		<if test="!@oss.fosslight.util.StringUtil@isEmpty(filterCondition)">
			<include refid="filters"/>
		</if>
    </select>
	<select id="selectVulnerabilityHistoryList" parameterType="oss.fosslight.domain.VulnerabilityHistory" resultType="oss.fosslight.domain.VulnerabilityHistory">
		SELECT
			OSS_ID
			, OSS_NAME
			, OSS_VERSION
			, CVE_ID
			, CVSS_SCORE
			, CVE_ID_TO
			, CVSS_SCORE_TO
			, DATE_FORMAT(REG_DT, '%Y-%m-%d %H:%i') AS REG_DT 
		FROM NVD_OSS_HIS
		WHERE 1=1
		<if test="!@oss.fosslight.util.StringUtil@isEmpty(filterCondition)">
			<include refid="filters"/>
		</if>
		<include refid="orderby"/>
		<include refid="limitPage"/>
	</select>
    
</mapper>
